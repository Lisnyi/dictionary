{"version":3,"file":"static/js/236.6884f06b.chunk.js","mappings":"iPAUA,SAASA,EAASC,GAChB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAiBC,EAAAA,EAAAA,MACvB,OAAOC,EAAAA,EAAAA,UACL,kBAAMC,EAAAA,EAAAA,IAAcL,EAAMM,WAAW,kBAChCJ,GACAH,GACH,GACF,CAACA,EAASC,EAAMM,UAAWJ,GAE/B,CACA,I,SCfe,SAASK,IACpB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MACXC,EAAQf,IAkBd,OACI,SAAC,KAAS,WACN,SAAC,KAAO,WACJ,SAAC,KAAc,CAACgB,WAnBP,SAACC,GAClB,GCZD,SAAqBC,EAAMR,GAC9B,IAAMS,EAAiBD,EAAKE,oBAE5B,OADeV,EAAWW,MAAK,SAACC,GAAC,OAAKA,EAAEJ,KAAKE,sBAAwBD,CAAc,GAEvF,CDQYI,CAAYN,EAAQC,KAAMR,GAC1B,OAAOK,EAAM,CACTS,MAAM,kCAAD,OAAWP,EAAQC,KAAI,sFAC5BO,OAAQ,QACRC,YAAY,IAGpBb,GAASc,EAAAA,EAAAA,IAAQV,IACjBF,EAAM,CACFS,MAAM,kCAAD,OAAWP,EAAQC,KAAI,oFAC5BO,OAAQ,UACRC,YAAY,GAEpB,OASJ,C","sources":["../node_modules/@chakra-ui/toast/dist/chunk-JFERWNZE.mjs","pages/AddNewWords/AddNewWords.jsx","utils/isDublicate.js"],"sourcesContent":["import {\n  useToastOptionContext\n} from \"./chunk-ZP4IHIHZ.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-RANSABEB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { AddNewWordForm, Section, Container } from '../../components'\r\nimport { getDictionary, addWord } from '../../store'\r\nimport { isDuplicate } from '../../utils'\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nexport default function AddNewWords() {\r\n    const dictionary = useSelector(getDictionary)\r\n    const dispatch = useDispatch()\r\n    const toast = useToast()\r\n\r\n    const handleSubmit = (newWord) => {\r\n        if (isDuplicate(newWord.word, dictionary)){\r\n            return toast({\r\n                title: `Слово ${newWord.word} вже є в словнику`,\r\n                status: 'error',\r\n                isClosable: true,\r\n              })\r\n        }\r\n        dispatch(addWord(newWord))\r\n        toast({\r\n            title: `Слово ${newWord.word} успішно додано`,\r\n            status: 'success',\r\n            isClosable: true,\r\n          })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Section>\r\n                <AddNewWordForm addNewWord={handleSubmit}/>\r\n            </Section>\r\n        </Container>\r\n    )\r\n}\r\n","export function isDuplicate(word, dictionary) {\r\n    const normalizedWord = word.toLocaleLowerCase()\r\n    const result = dictionary.find((w) => w.word.toLocaleLowerCase() === normalizedWord)\r\n    return result\r\n}"],"names":["useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","direction","AddNewWords","dictionary","useSelector","getDictionary","dispatch","useDispatch","toast","addNewWord","newWord","word","normalizedWord","toLocaleLowerCase","find","w","isDuplicate","title","status","isClosable","addWord"],"sourceRoot":""}